steps:
  # Paso 1: Instalar dependencias
  - name: 'node:16'
    entrypoint: 'npm'
    args: ['ci']

  # Paso 2: Ejecutar pruebas con cobertura
  - name: 'node:16'
    entrypoint: 'npm'
    args: ['test', '--', '--coverage']

  # Paso 3: Instalar Sonar Scanner
  - name: 'node:16'
    entrypoint: 'npm'
    args: ['install', '-g', 'sonar-scanner']

  # Paso 4: Ejecutar Sonar Scanner
  - name: 'node:16'
    entrypoint: 'sonar-scanner'
    env:
      - 'SONAR_HOST_URL=https://sonarcloud.io'
      - 'SONAR_LOGIN=b47692e9f54b35339ce70aa592a3f5ba1bbe7735'
    args:
      - '-Dsonar.host.url=https://sonarcloud.io'
      - '-Dsonar.projectKey=react-demo-sq'
      - '-Dsonar.organization=danielssperez'
      - '-Dsonar.exclusions=Dockerfile,**/*.html,**/*.json,**/*.yaml,src/tests/**'
      - '-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info'
      - '-Dsonar.sources=src'
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update
        apt-get install jq -y
        # Realizar la solicitud a la API de SonarCloud
        response=$(curl -s -u 8624735de16766a8f22d48c99847cf2f1e99590b: https://sonarcloud.io/api/qualitygates/project_status?projectKey=react-demo-sq)
        # Extraer el estado del Quality Gate del JSON de respuesta
        status=$(echo $response | jq -r '.projectStatus.status')
        # Verifica el estado del Quality Gate
        if [ "$status" = "ERROR" ]; then
          echo "Quality Gate FAILED"
          exit 1
        elif [ "$status" = "OK" ]; then
          echo "Quality Gate PASSED"
          exit 0
        fi
artifacts:
  objects:
    location: 'gs://gcp-csr-demo-devops-gcr-logs/reportes'
    paths: ['index.html']

logsBucket: gcp-csr-demo-devops-gcr-logs